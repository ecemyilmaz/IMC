{"version":3,"sources":["components/Button.js","components/Display.js","components/Form.js","App.js","serviceWorker.js","index.js"],"names":["Button","window","open","focus","react_default","a","createElement","className","onClick","this","clickButton","Component","Circumference","props","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","decideColor","bind","assertThisInitialized","number","color","resultado","result","viewBox","d","fill","strokeWidth","stroke","x","y","dominantBaseline","textAnchor","Display","_this2","calculate","evalResult","weight","parseInt","appState","height","Number","Math","round","state","estado","Display_Circumference","components_Button","Form","type","id","name","value","defaultChecked","htmlFor","onChange","e","stateChange","min","max","step","App","isLoading","handleChange","obj","target","setState","components_Display","components_Form","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4ac44a3f.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nclass Button extends Component {\n  clickButton() {\n    let url = \"https://rotasaude.lusiadas.pt/imc-o-que-calcular/\";\n    let win = window.open(url, \"_blank\");\n    win.focus();\n  }\n\n  render() {\n    return (\n      <button className=\"learn-more\" onClick={this.clickButton}>\n        <div className=\"circle\">\n          <span className=\"icon arrow\" />\n        </div>\n        <p className=\"button-text\">Saber Mais</p>\n      </button>\n    );\n  }\n}\nexport default Button;\n","import React, { Component } from \"react\";\nimport Button from \"./Button\";\n\nclass Circumference extends Component {\n  constructor(props) {\n    super(props);\n\n    this.decideColor = this.decideColor.bind(this);\n  }\n\n  decideColor(number) {\n    let color;\n    if (number < 18.5) {\n      color = \"#9DD9D2\";\n    } else if (number >= 18.5 && number < 25) {\n      color = \"#fff\";\n    } else if (number >= 25 && number < 30) {\n      color = \"#F18F01\";\n    } else if (number >= 30) {\n      color = \"#C73E1D\";\n    }\n\n    return color;\n  }\n\n  render() {\n    let resultado = this.props.result();\n    let color = this.decideColor(resultado);\n    return (\n      <svg viewBox=\"0 0 36 36\" className=\"circumf\">\n        <path\n          className=\"circumf_path\"\n          d=\"M18 2.0845\n      a 15.9155 15.9155 0 0 1 0 31.831\n      a 15.9155 15.9155 0 0 1 0 -31.831\"\n          fill=\"none\"\n          strokeWidth=\"1\"\n          stroke={color}\n        />\n        <text\n          x=\"50%\"\n          y=\"50%\"\n          dominantBaseline=\"middle\"\n          textAnchor=\"middle\"\n          className=\"circumf_text\"\n        >\n          {resultado}\n        </text>\n      </svg>\n    );\n  }\n}\n\nclass Display extends Component {\n  constructor(props) {\n    super(props);\n\n    this.calculate = this.calculate.bind(this);\n    this.evalResult = this.evalResult.bind(this);\n  }\n\n  calculate() {\n    let weight = parseInt(this.props.appState.weight);\n    let height = Number(this.props.appState.height * 0.01);\n\n    let formula = Math.round((weight / (height * height)) * 10) / 10;\n\n    return formula;\n  }\n\n  evalResult(number) {\n    let state;\n    if (number < 18.5) {\n      state = \"Abaixo de Peso\";\n    } else if (number >= 18.5 && number < 25) {\n      state = \"Peso Normal\";\n    } else if (number >= 25 && number < 30) {\n      state = \"Acima de Peso\";\n    } else if (number >= 30) {\n      state = \"Obesidade\";\n    }\n    return state;\n  }\n\n  render() {\n    let estado = this.evalResult(this.calculate());\n    return (\n      <div className=\"Display\">\n        <div className=\"Display__text\">\n          <h1>{estado}</h1>\n        </div>\n        <Circumference result={this.calculate} />\n        <Button />\n      </div>\n    );\n  }\n}\nexport default Display;\n","import React, { Component } from \"react\";\n\nclass Form extends Component {\n  render() {\n    return (\n      <div className=\"Form\">\n        <div className=\"switch-field\">\n          <input\n            type=\"radio\"\n            id=\"switch_left\"\n            name=\"switch_2\"\n            value=\"yes\"\n            defaultChecked\n          />\n          <label htmlFor=\"switch_left\">Homem</label>\n          <input type=\"radio\" id=\"switch_right\" name=\"switch_2\" value=\"no\" />\n          <label htmlFor=\"switch_right\">Mulher</label>\n        </div>\n        <div className=\"range-group\">\n          <div className=\"range-field\">\n            <div className=\"range-field__text\">\n              <label htmlFor=\"range\">Estatura</label>\n              <span className=\"range-current\">\n                <span className=\"destaque\">{this.props.appState.height}</span>\n                cm\n              </span>\n            </div>\n            <input\n              onChange={e => {\n                this.props.stateChange(e);\n              }}\n              name=\"height\"\n              type=\"range\"\n              min=\"140\"\n              max=\"200\"\n              step=\"1\"\n            />\n            <div className=\"range-field__text\">\n              <span className=\"extreme\">140</span>\n              <span className=\"extreme\">200</span>\n            </div>\n          </div>\n\n          <div className=\"range-field\">\n            <div className=\"range-field__text\">\n              <label htmlFor=\"range\">Peso</label>\n              <span className=\"range-current\">\n                <span className=\"destaque\">{this.props.appState.weight}</span>kg\n              </span>\n            </div>\n            <input\n              onChange={e => {\n                this.props.stateChange(e);\n              }}\n              name=\"weight\"\n              type=\"range\"\n              min=\"30\"\n              max=\"125\"\n              step=\"1\"\n            />\n            <div className=\"range-field__text\">\n              <span className=\"extreme\">30</span>\n              <span className=\"extreme\">125</span>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default Form;\n","import React, { Component } from \"react\";\nimport \"./App.scss\";\nimport Display from \"./components/Display\";\nimport Form from \"./components/Form\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      height: 140,\n      weight: 40,\n      isLoading: true\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(e) {\n    let obj = {};\n    obj[e.target.name] = e.target.value;\n    this.setState(obj);\n  }\n\n  componentDidMount() {\n    this.setState({ isLoading: false });\n  }\n\n  render() {\n    if (this.state.isLoading) {\n      return <div className=\"loading\" />;\n    } else {\n      return (\n        <div className=\"App\">\n          <div className=\"content\">\n            <Display appState={this.state} />\n            <Form appState={this.state} stateChange={this.handleChange} />\n          </div>\n        </div>\n      );\n    }\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}